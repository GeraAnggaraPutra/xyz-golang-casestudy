GO_APP=go
MIGRATE_APP=migrate
LINT_APP=golangci-lint
RUNNER_SIG_EXT=go,tmpl,html

SERVER_FILE=cmd/server/main.go
BINARY_FILE=bin/server/main

MIGRATE_FOLDER=./database/migration

# Docker Compose commands
.PHONY: up start stop down restart logs migrate.up migrate.down migrate.create migrate.fix

up:
	docker compose up --build -d

stop:
	docker compose stop

start:
	docker compose start

down:
	docker compose down

restart:
	docker compose restart app

logs:
	docker compose logs -f app

migrate.create:
	$(MIGRATE_APP) create -ext sql -dir $(MIGRATE_FOLDER) $(name)

migrate.up:
	docker compose exec app $(MIGRATE_APP) -path "file:///app/database/migration" -database "$$MIGRATE_DATABASE_URL" --verbose up

migrate.down:
	docker compose exec app $(MIGRATE_APP) -path "file:///app/database/migration" -database "$$MIGRATE_DATABASE_URL" --verbose down

migrate.fix:
	docker compose exec app $(MIGRATE_APP) -path "file:///app/database/migration" -database "$$MIGRATE_DATABASE_URL" force $(version)

# Local development commands
.PHONY: env deps run build lint

env:
	cp example.env .env

deps:
	$(GO_APP) mod tidy

run:
	$(GO_APP) run $(SERVER_FILE)

build:
	$(GO_APP) build -o $(BINARY_FILE) $(SERVER_FILE)

lint:
	@echo -e "==> start linting..."
	$(LINT_APP) run --fix
